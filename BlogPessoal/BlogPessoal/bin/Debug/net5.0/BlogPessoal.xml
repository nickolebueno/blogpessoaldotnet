<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlogPessoal</name>
    </assembly>
    <members>
        <member name="M:BlogPessoal.src.controllers.PostController.GetPostByIdAsync(System.Int32)">
            <summary>
            Get posts by as async.
            </summary>
            <returns> ActionResult </returns>
            <response code = "200">Post object</response>
            <response code = "204">Post empty</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.PostController.GetAllPostsAsync">
            <summary>
            Get all posts
            </summary>
            <returns>ActionResult </returns>
            <response code="200">Posts list</response>
            <response code="204">Post empty list</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.PostController.GetPostBySearchAsync(System.String,System.String,System.String)">
            <summary>
            Get post list by search
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Return posts list</response>
            <response code="204">Posts not found for this search</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.PostController.NewPostAsync(BlogPessoal.src.dtos.NewPostDTO)">
            <summary>
            Create a new post
            </summary>
            <returns>ActionResult</returns>
            <response code="201">Retorna created post</response>
            <response code="400">Request error</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.PostController.UpdatePostAsync(BlogPessoal.src.dtos.UpdatePostDTO)">
            <summary>
            Update post
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Returns the updated post</response>
            <response code="400">Request error</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.PostController.DeletePostAsync(System.Int32)">
            <summary>
            Delete the post by id.
            </summary>
            <returns>ActionResult</returns>
            <response code="204">Post deleted</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.ThemeController.PegarTodosTemasAsync">
            <summary>
            Get all themes
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Themes list</response>
            <response code="204">List empty</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.ThemeController.GetThemeByIdAsync(System.Int32)">
            <summary>
            Get theme by Id
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Returns the theme</response>
            <response code="404">Theme does not exist</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.ThemeController.GetThemeByDescriptionAsync(System.String)">
            <summary>
            Get theme by Description
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Returns the themes</response>
            <response code="204">List themes empty</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.ThemeController.NewThemeAsync(BlogPessoal.src.dtos.NewThemeDTO)">
             <summary>
            Create a new theme
             </summary>
             <returns>ActionResult</returns>
             <response code="201">Return theme created</response>
             <response code="400">Request error</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.ThemeController.UpdateThemeAsync(BlogPessoal.src.dtos.UpdateThemeDTO)">
            <summary>
            Update the theme
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Returns the updated theme</response>
            <response code="400">Request error</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.ThemeController.DeleteThemeAsync(System.Int32)">
            <summary>
            Delete the theme by Id
            </summary>
            <returns>ActionResult</returns>
            <response code="204">Theme deleted</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.UserController.GetUserByIdAsync(System.Int32)">
            <summary>
            Get user by Id
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Returns the user</response>
            <response code="404">User does not exist</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.UserController.GetUsersByNameAsync(System.String)">
            <summary>
            Get user by name
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Returns the user</response>
            <response code="404">User does not exist</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.UserController.GetUserByEmailAsync(System.String)">
            <summary>
            Get user by email
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Returns the user</response>
            <response code="404">User does not exist</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.UserController.NewUserAsync(BlogPessoal.src.dtos.NewUserDTO)">
            <summary>
            Create a new user
            </summary>
            <returns>ActionResult</returns>
            <response code="201">Returns the created user</response>
            <response code="400">Request error</response>
            <response code="401">Email already registered</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.UserController.UpdateUserAsync(BlogPessoal.src.dtos.UpdateUserDTO)">
            <summary>
            Update the user
            </summary>
            <returns>ActionResult</returns>
            <response code="200">Return user updated</response>
            <response code="400">Request error</response>
        </member>
        <member name="M:BlogPessoal.src.controllers.UserController.DeleteUserAsync(System.Int32)">
            <summary>
            Delete the user by the Id
            </summary>
            <returns>ActionResult</returns>
            <response code="204">User deleted</response>
        </member>
        <member name="T:BlogPessoal.src.dtos.NewPostDTO">
            <summary>
            <para> DTO for create a new post </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
        <member name="T:BlogPessoal.src.dtos.UpdatePostDTO">
            <summary>
            <para> DTO for update a new post </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
        <member name="T:BlogPessoal.src.dtos.NewThemeDTO">
            <summary>
            <para> DTO for create a new theme </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
        <member name="T:BlogPessoal.src.dtos.UpdateThemeDTO">
            <summary>
            <para> DTO for update the theme </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
        <member name="T:BlogPessoal.src.dtos.NewUserDTO">
            <summary>
            <para> DTO for create a new user </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
        <member name="T:BlogPessoal.src.dtos.UpdateUserDTO">
            <summary>
            <para> DTO for update a new user </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
        <member name="T:BlogPessoal.src.dtos.DeleteUserDTO">
            <summary>
            <para> DTO for delete a new user </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
        <member name="T:BlogPessoal.src.repositories.IUser">
            <summary>
            <para>  </para>
            <para>Criado por: Nickole Bueno</para>
            <para>Versão: 1.0</para>
            <para>Data: 29/04/2022</para>
            </summary>
        </member>
    </members>
</doc>
